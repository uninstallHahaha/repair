<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.aclic.lottery.daos.WorkerMapper">
  <resultMap id="BaseResultMap" type="com.aclic.lottery.Models.Worker">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="pass" jdbcType="VARCHAR" property="pass" />
    <result column="department" jdbcType="INTEGER" property="department" />
    <result column="finish" jdbcType="INTEGER" property="finish" />
    <result column="todo" jdbcType="INTEGER" property="todo" />
    <result column="pic" jdbcType="VARCHAR" property="pic" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, name, pass, department, finish, todo, pic
  </sql>
  <select id="selectByExample" parameterType="com.aclic.lottery.Models.WorkerExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from worker
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from worker
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from worker
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.aclic.lottery.Models.WorkerExample">
    delete from worker
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.aclic.lottery.Models.Worker">
    insert into worker (id, name, pass, 
      department, finish, todo, 
      pic)
    values (#{id,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{pass,jdbcType=VARCHAR}, 
      #{department,jdbcType=INTEGER}, #{finish,jdbcType=INTEGER}, #{todo,jdbcType=INTEGER}, 
      #{pic,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.aclic.lottery.Models.Worker">
    insert into worker
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="pass != null">
        pass,
      </if>
      <if test="department != null">
        department,
      </if>
      <if test="finish != null">
        finish,
      </if>
      <if test="todo != null">
        todo,
      </if>
      <if test="pic != null">
        pic,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="pass != null">
        #{pass,jdbcType=VARCHAR},
      </if>
      <if test="department != null">
        #{department,jdbcType=INTEGER},
      </if>
      <if test="finish != null">
        #{finish,jdbcType=INTEGER},
      </if>
      <if test="todo != null">
        #{todo,jdbcType=INTEGER},
      </if>
      <if test="pic != null">
        #{pic,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.aclic.lottery.Models.WorkerExample" resultType="java.lang.Long">
    select count(*) from worker
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update worker
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.pass != null">
        pass = #{record.pass,jdbcType=VARCHAR},
      </if>
      <if test="record.department != null">
        department = #{record.department,jdbcType=INTEGER},
      </if>
      <if test="record.finish != null">
        finish = #{record.finish,jdbcType=INTEGER},
      </if>
      <if test="record.todo != null">
        todo = #{record.todo,jdbcType=INTEGER},
      </if>
      <if test="record.pic != null">
        pic = #{record.pic,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update worker
    set id = #{record.id,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      pass = #{record.pass,jdbcType=VARCHAR},
      department = #{record.department,jdbcType=INTEGER},
      finish = #{record.finish,jdbcType=INTEGER},
      todo = #{record.todo,jdbcType=INTEGER},
      pic = #{record.pic,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.aclic.lottery.Models.Worker">
    update worker
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="pass != null">
        pass = #{pass,jdbcType=VARCHAR},
      </if>
      <if test="department != null">
        department = #{department,jdbcType=INTEGER},
      </if>
      <if test="finish != null">
        finish = #{finish,jdbcType=INTEGER},
      </if>
      <if test="todo != null">
        todo = #{todo,jdbcType=INTEGER},
      </if>
      <if test="pic != null">
        pic = #{pic,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.aclic.lottery.Models.Worker">
    update worker
    set name = #{name,jdbcType=VARCHAR},
      pass = #{pass,jdbcType=VARCHAR},
      department = #{department,jdbcType=INTEGER},
      finish = #{finish,jdbcType=INTEGER},
      todo = #{todo,jdbcType=INTEGER},
      pic = #{pic,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>